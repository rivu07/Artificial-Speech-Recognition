>> clc;clear
addpath(pwd)
fprintf(1,'%s \r\r', 'This program has been written to mix speech and noise for speech perception in noise experiments')
fprintf('create a folder of format SNR_VALUE OF SNR inside the folder containing original wav file')
pause(2)
clc
tic
[noisename,path1] = uigetfile('*.wav','select the noise file');
[specnoise1,Fs] = audioread([path1,noisename]);
Fs=16000;
fprintf(1, '%s \r','Message : Please ensure that the noise is sufficiently longer than the speech')
clear path
snr = input('Type in the SNR you desire = ');
sil = input('Amount of silent duration between the onset of noise and onset of speech (in seconds, >0ms) = ');
durgap = sil;
type = '\*.wav';
[files, path2] = uigetfile([pwd, type], 'Select the all the speech stimuli that you want to mix with noise', 'MultiSelect', 'On');
if ischar(files) ~=1
    disp('Message : You are processing multiple files')
nfiles = length(files);
files = char(files);
stimlist=files;
else
    stimlist= files; disp('You are processing a Single file')
    nfiles = 1;
end
dbs = -20;              % Change this when you need an SNR lower than -10dB
dbn = dbs-snr;
h = waitbar(0,'Speech is bening mixed with noise... Sit back and relax');
for i = 1:nfiles
z = stimlist(i,:) ;
[speech,fs] =  audioread([path2,z]);
n = length(speech);
specnoise = specnoise1;
if fs~=Fs
specnoise = resample(specnoise,fs,Fs);
end
nlen = length(specnoise);
slen = length(speech);
if slen>nlen
diff = slen/nlen;
rep = 5*round(diff+1);
noise = repmat(specnoise,[rep,1]);
else
    noise = specnoise;
end
% selecting random sections of noise
nlen = length(noise);
slen = length(speech);
len = nlen- 3*slen;
start = randperm(round(nlen/3));
start = start';
start = start(2,:);
ending = start+3*slen;
noise = noise(start:ending,1);
noise = [noise;noise;noise];
speech = speech/max(abs(speech));
    rms_sound_dB = norm(speech)/sqrt(length(speech));
    ratio = (10^(dbs/20))/rms_sound_dB;
    signal = ratio*speech;
silence  = zeros(sil*fs,1);
signal = [silence;signal;silence];  
noy = [];
noy = noise(1:length(signal));
noy =  noy/max(abs(noy));
    rms_sound_dBn = norm(noy)/sqrt(length(noy));
    ration = (10^(dbn/20))/rms_sound_dBn;
    abc = ration*noy;
   
%signal(round(length(signal)/2):length(signal)) = signal(round(length(signal)/2):length(signal))+abc(round(length(signal)/2):length(signal));
signal=signal+abc;
%mix2=signal(1:round(length(signal)/3));
%mix=mix1+mix2;
clear outname
path3=strcat(path2, 'SNR_',num2str(snr),'_CAR','/');
outname = [path3 '_'  (z) '' ];
signal=signal./max(abs(signal));
audiowrite(strcat(path3,(z),'.wav'),signal,fs);
waitbar(i/nfiles)
%% for verbose file
verb_infilename(i,:) = [path2, z];
verb_outfilename(i,:) = outname;
end
close(h)
%% Generate the Verbose file
verb_noise = [path1,noisename];
fid = fopen([path2,'verbose.txt'], 'wt');
fprintf(fid,'%s \r\r','VERBOSE OUTPUT OF THE SPEECHMIX :');
fprintf(fid, '%s \r\r', datestr(now))
fprintf(fid,'%s \r', ['Output SNR: ', num2str(snr), 'dBSNR' ]);
fprintf(fid,'%s \r', ['Speech Level: ', num2str(dbs), 'dB' ]);
fprintf(fid,'%s \r\r', ['Noise Level: ', num2str(dbn), 'dB' ]);
fprintf(fid,'%s \r\r', ['onset time difference b/w noise and speech: ', num2str(durgap), ' seconds' ]);
fprintf(fid, '%s \r', 'Input files - ');
for i =1:nfiles
fprintf(fid,'%s  \r', verb_infilename(i,:));
end
fprintf(fid, '%s \r', '');
fprintf(fid, '%s \r', 'Output files - ');
for i =1:nfiles
fprintf(fid,'%s  \r', verb_outfilename(i,:));
end
fprintf(fid, '%s \r\r', ' ');
fprintf(fid, '%s \r', '--------------------ALL THE BEST FOR YOUR SPEECH PERCEPTION RESEARCH-------------------- ');
fclose(fid)
toc
fprintf(1,'%s \r', ['The verbose file has been written in ' path2] );